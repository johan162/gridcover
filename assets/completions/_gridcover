#compdef gridcover

autoload -U is-at-least

_gridcover() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-o+[Output image file name]:IMAGE-FILE-NAME:_default' \
'--args-write-file-name=[Write program arguments file in TOML format]:ARGS-FILE-NAME:_default' \
'-i+[Read program arguments from a TOML file]:ARGS-FILE-NAME:_default' \
'--args-read-file-name=[Read program arguments from a TOML file]:ARGS-FILE-NAME:_default' \
'-z+[Simulation step size in units if not specified will be calculated from the square size]:STEP_SIZE:_default' \
'--step-size=[Simulation step size in units if not specified will be calculated from the square size]:STEP_SIZE:_default' \
'-r+[Radius of the circle]:RADIUS:_default' \
'--radius=[Radius of the circle]:RADIUS:_default' \
'-l+[Length of knife blade]:BLADE_LEN:_default' \
'--blade-len=[Length of knife blade]:BLADE_LEN:_default' \
'-W+[Width in units of the grid]:GRID_WIDTH:_default' \
'--grid-width=[Width in units of the grid]:GRID_WIDTH:_default' \
'-H+[Height in units of the grid]:GRID_HEIGHT:_default' \
'--grid-height=[Height in units of the grid]:GRID_HEIGHT:_default' \
'-s+[Size of each grid square]:CELL_SIZE:_default' \
'--cell-size=[Size of each grid square]:CELL_SIZE:_default' \
'-x+[Starting X coordinate for the circle center]:START_X:_default' \
'--start-x=[Starting X coordinate for the circle center]:START_X:_default' \
'-y+[Starting Y coordinate for the circle center]:START_Y:_default' \
'--start-y=[Starting Y coordinate for the circle center]:START_Y:_default' \
'-v+[Movement velocity in units/second]:VELOCITY:_default' \
'--velocity=[Movement velocity in units/second]:VELOCITY:_default' \
'--start-dir-x=[Direction X component]:START_DIR_X:_default' \
'--start-dir-y=[Direction Y component]:START_DIR_Y:_default' \
'-p+[Use perturbation angle for direction changes at bounce]:PERTURB:(true false)' \
'--perturb=[Use perturbation angle for direction changes at bounce]:PERTURB:(true false)' \
'-k+[Use perturbation randomly while moving in a straight line]:PERTURB_SEGMENT:(true false)' \
'--perturb-segment=[Use perturbation randomly while moving in a straight line]:PERTURB_SEGMENT:(true false)' \
'--perturb-segment-percent=[Perturb segment percent chance per cell travelled]:PERTURB_SEGMENT_PERCENT:_default' \
'-b+[Maximum number of bounces before ending simulation]:STOP_BOUNCES:_default' \
'--stop-bounces=[Maximum number of bounces before ending simulation]:STOP_BOUNCES:_default' \
'-t+[Maximum simulated time when to stop in seconds]:STOP_TIME:_default' \
'--stop-time=[Maximum simulated time when to stop in seconds]:STOP_TIME:_default' \
'-c+[Stop when we have reached this coverage percentage This is a soft limit, the simulation will still run until the specified bounces or time is reached if specified]:STOP_COVERAGE:_default' \
'--stop-coverage=[Stop when we have reached this coverage percentage This is a soft limit, the simulation will still run until the specified bounces or time is reached if specified]:STOP_COVERAGE:_default' \
'-m+[Stop when we have reached the specified number of simulation steps]:STOP_SIMSTEPS:_default' \
'--stop-simsteps=[Stop when we have reached the specified number of simulation steps]:STOP_SIMSTEPS:_default' \
'-d+[Stop when we have reached the specified distance covered]:STOP_DISTANCE:_default' \
'--stop-distance=[Stop when we have reached the specified distance covered]:STOP_DISTANCE:_default' \
'--verbosity=[Verbosity during simulation]:VERBOSITY:_default' \
'-P+[Use parallel processing to speed up simulation]:PARALLEL:(true false)' \
'--parallel=[Use parallel processing to speed up simulation]:PARALLEL:(true false)' \
'-S+[Random seed for the simulation to be able to reproduce results If not specified, a random seed will be generated]:RANDOM_SEED:_default' \
'--random-seed=[Random seed for the simulation to be able to reproduce results If not specified, a random seed will be generated]:RANDOM_SEED:_default' \
'--image-width-mm=[Image output width in mm (50-2000)]:IMAGE_WIDTH_MM:_default' \
'--image-height-mm=[Image output height in mm (50-2000)]:IMAGE_HEIGHT_MM:_default' \
'-Z+[Paper size to use for the output image. Options\: '\''A0'\'', '\''A1'\'', '\''A2'\'', '\''A3'\'', '\''A4'\'', '\''A5'\'', '\''Letter'\'', '\''Legal'\''.]:PAPER-SIZE:(a5 a4 a3 a2 a1 a0 letter legal tabloid executive custom)' \
'--paper-size=[Paper size to use for the output image. Options\: '\''A0'\'', '\''A1'\'', '\''A2'\'', '\''A3'\'', '\''A4'\'', '\''A5'\'', '\''Letter'\'', '\''Legal'\''.]:PAPER-SIZE:(a5 a4 a3 a2 a1 a0 letter legal tabloid executive custom)' \
'-C+[Add option to turn centerpoint tracking on or off]:TRACK_CENTER:(true false)' \
'--track-center=[Add option to turn centerpoint tracking on or off]:TRACK_CENTER:(true false)' \
'-R+[Show progress bar during simulation (default\: true)]:SHOW_PROGRESS:(true false)' \
'--show-progress=[Show progress bar during simulation (default\: true)]:SHOW_PROGRESS:(true false)' \
'-T+[Cutter type to use for the simulation. Options\: '\''blade'\'', '\''circular'\''.]:CUTTER-TYPE:(blade circular)' \
'--cutter-type=[Cutter type to use for the simulation. Options\: '\''blade'\'', '\''circular'\''.]:CUTTER-TYPE:(blade circular)' \
'-D+[DPI setting for image output (default\: 300)]:DPI:_default' \
'--dpi=[DPI setting for image output (default\: 300)]:DPI:_default' \
'-J+[Print results as a json object]:JSON_OUTPUT:(true false)' \
'--json-output=[Print results as a json object]:JSON_OUTPUT:(true false)' \
'-B+[Battery duration in minutes for the cutter]:BATTERY_RUN_TIME:_default' \
'--battery-run-time=[Battery duration in minutes for the cutter]:BATTERY_RUN_TIME:_default' \
'-A+[Battery charging time in minutes for the cutter when it runs out]:BATTERY_CHARGE_TIME:_default' \
'--battery-charge-time=[Battery charging time in minutes for the cutter when it runs out]:BATTERY_CHARGE_TIME:_default' \
'-M+[Path to map file with obstacles]:MAP-FILE:_default' \
'--map-file-name=[Path to map file with obstacles]:MAP-FILE:_default' \
'-G+[Show or hide gridlines in the output image]:SHOW_GRIDLINES:(true false)' \
'--show-gridlines=[Show or hide gridlines in the output image]:SHOW_GRIDLINES:(true false)' \
'-Q+[Store simulation results and model parameters in SQLite database file]:DATABASE-FILE:_default' \
'--database-file=[Store simulation results and model parameters in SQLite database file]:DATABASE-FILE:_default' \
'-q+[Quiet, no output at all]:QUIET:(true false)' \
'--quiet=[Quiet, no output at all]:QUIET:(true false)' \
'-f+[Generate frames for an animation]:GENERATE_FRAMES:(true false)' \
'--generate-frames=[Generate frames for an animation]:GENERATE_FRAMES:(true false)' \
'-F+[Specify frame-rate for the animation]:FRAME_RATE:_default' \
'--frame-rate=[Specify frame-rate for the animation]:FRAME_RATE:_default' \
'--frames-dir=[]:FRAMES-DIR:_default' \
'-a+[Generate an animation video from the frames]:CREATE_ANIMATION:(true false)' \
'--create-animation=[Generate an animation video from the frames]:CREATE_ANIMATION:(true false)' \
'--animation-file-name=[Animation file name]:ANIMATION-FILE-NAME:_default' \
'-U+[Animation speedup factor]:ANIMATION-SPEEDUP-FACTOR:_default' \
'--animation-speedup=[Animation speedup factor]:ANIMATION-SPEEDUP-FACTOR:_default' \
'--hw-encoding=[Use HW assisted encoding for the animation. This is only available on macOS and Linux]:HW_ENCODING:(true false)' \
'--delete-frames=[Delete frames after animation has been created]:DELETE_FRAMES:(true false)' \
'--color-theme=[Color theme to use as an string, possible values\: "default", "green30", "blue", "high_contrast", "pure_green", "gray_green"]:COLOR-THEME:_default' \
'--wheel-slippage=[Add simulation of wheel slippage which will cause the cutter to not follow the path exactly]:WHEEL_SLIPPAGE:(true false)' \
'--slippage-probability=[Slippage probability per slippage_activation_check_distance]:SLIPPAGE_PROBABILITY:_default' \
'--slippage-min-distance=[Slippage activation min distance in units]:SLIPPAGE_MIN_DISTANCE:_default' \
'--slippage-max-distance=[Slippage activation max distance in units]:SLIPPAGE_MAX_DISTANCE:_default' \
'--slippage-radius-min=[Slippage min angle in degrees to adjust as slippage per defined steps]:SLIPPAGE_RADIUS_MIN:_default' \
'--slippage-radius-max=[Slippage max angle in degrees to adjust as slippage per defined steps]:SLIPPAGE_RADIUS_MAX:_default' \
'--slippage-check-activation-distance=[Check if we should activate slippage every this units travelled]:SLIPPAGE_CHECK_ACTIVATION_DISTANCE:_default' \
'--slippage-adjustment-step=[While in slippage mode adjust the angle every n\:th units travelled]:SLIPPAGE_ADJUSTMENT_STEP:_default' \
'--wheel-inbalance=[Wheel inbalance simulation, this will cause the cutter to not follow the straight path exactly]:WHEEL_INBALANCE:(true false)' \
'--wheel-inbalance-radius-min=[We model wheel inbalance as the cutter turning in a random radius between a min/max value]:WHEEL_INBALANCE_RADIUS_MIN:_default' \
'--wheel-inbalance-radius-max=[We model wheel inbalance as the cutter turning in a random radius between a min/max value]:WHEEL_INBALANCE_RADIUS_MAX:_default' \
'--wheel-inbalance-adjustment-step=[Wheel inbalance adjustment distance in units]:WHEEL_INBALANCE_ADJUSTMENT_STEP:_default' \
'--show-quad-tree=[Show the quad-tree structure in the output image]:SHOW_QUAD_TREE:(true false)' \
'--min-qnode-size=[Min quad tree node size in multiples of cutter radius]:MIN_QNODE_SIZE:_default' \
'--use-quad-tree=[Enable the use of a quad-tree for faster collision detection]:USE_QUAD_TREE:(true false)' \
'--save-quad-tree=[Save the quad-tree structure to a file with name based on the map file name]:SAVE_QUAD_TREE:(true false)' \
'--show-image-label=[Decide if label with sim-time and coverage should be added to the output image]:SHOW_IMAGE_LABEL:(true false)' \
'-X+[Generate model.json and result.json as two files at end of simulation and only print the short version to the console]:GENERATE_JSON_FILES:(true false)' \
'--generate-json-files=[Generate model.json and result.json as two files at end of simulation and only print the short version to the console]:GENERATE_JSON_FILES:(true false)' \
'--generate-completions[Generate bash and zsh completion scripts (gridcover.bash and _gridcover) in current directory and exit]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
}

(( $+functions[_gridcover_commands] )) ||
_gridcover_commands() {
    local commands; commands=()
    _describe -t commands 'gridcover commands' commands "$@"
}

if [ "$funcstack[1]" = "_gridcover" ]; then
    _gridcover "$@"
else
    compdef _gridcover gridcover
fi
